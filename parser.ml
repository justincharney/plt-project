type token =
  | DOUBLECOLON
  | FUNC
  | PACKAGE
  | IMPORT
  | TYPE
  | STRUCT
  | RETURN
  | BREAK
  | IF
  | ELSE
  | CONTINUE
  | FOR
  | WHILE
  | CONST
  | ERROR
  | NULL
  | FINAL
  | MUT
  | LATE
  | PRIVATE
  | BOOL
  | STRING
  | U8
  | U16
  | U32
  | U64
  | I8
  | I16
  | I32
  | I64
  | F32
  | F64
  | PLUS
  | MINUS
  | DIV
  | MULT
  | MOD
  | LSHIFT
  | RSHIFT
  | BITXOR
  | BITOR
  | BITNOT
  | BITAND
  | ASSIGN
  | PLUS_ASSIGN
  | MINUS_ASSIGN
  | TIMES_ASSIGN
  | DIV_ASSIGN
  | MOD_ASSIGN
  | DECL_ASSIGN
  | LSHIFT_ASSIGN
  | RSHIFT_ASSIGN
  | BITAND_ASSIGN
  | BITXOR_ASSIGN
  | BITOR_ASSIGN
  | EQ
  | NEQ
  | LT
  | LE
  | GT
  | GE
  | AND
  | OR
  | NOT
  | INC
  | DEC
  | NEG
  | LPAREN
  | RPAREN
  | LBRACE
  | RBRACE
  | LBRACKET
  | RBRACKET
  | SEMICOLON
  | COLON
  | COMMA
  | DOT
  | TRIPLEDOT
  | QUESTION
  | INT_LIT of (
# 25 "parser.mly"
        int
# 85 "parser.ml"
)
  | BOOL_LIT of (
# 26 "parser.mly"
        bool
# 90 "parser.ml"
)
  | CHAR_LIT of (
# 27 "parser.mly"
        char
# 95 "parser.ml"
)
  | FLOAT_LIT of (
# 28 "parser.mly"
        float
# 100 "parser.ml"
)
  | STRING_LIT of (
# 29 "parser.mly"
        string
# 105 "parser.ml"
)
  | IDENT of (
# 30 "parser.mly"
        string
# 110 "parser.ml"
)

open Parsing
let _ = parse_error;;
# 3 "parser.mly"
 open Ast 
# 117 "parser.ml"
let yytransl_const = [|
  257 (* DOUBLECOLON *);
  258 (* FUNC *);
  259 (* PACKAGE *);
  260 (* IMPORT *);
  261 (* TYPE *);
  262 (* STRUCT *);
  263 (* RETURN *);
  264 (* BREAK *);
  265 (* IF *);
  266 (* ELSE *);
  267 (* CONTINUE *);
  268 (* FOR *);
  269 (* WHILE *);
  270 (* CONST *);
  271 (* ERROR *);
  272 (* NULL *);
  273 (* FINAL *);
  274 (* MUT *);
  275 (* LATE *);
  276 (* PRIVATE *);
  277 (* BOOL *);
  278 (* STRING *);
  279 (* U8 *);
  280 (* U16 *);
  281 (* U32 *);
  282 (* U64 *);
  283 (* I8 *);
  284 (* I16 *);
  285 (* I32 *);
  286 (* I64 *);
  287 (* F32 *);
  288 (* F64 *);
  289 (* PLUS *);
  290 (* MINUS *);
  291 (* DIV *);
  292 (* MULT *);
  293 (* MOD *);
  294 (* LSHIFT *);
  295 (* RSHIFT *);
  296 (* BITXOR *);
  297 (* BITOR *);
  298 (* BITNOT *);
  299 (* BITAND *);
  300 (* ASSIGN *);
  301 (* PLUS_ASSIGN *);
  302 (* MINUS_ASSIGN *);
  303 (* TIMES_ASSIGN *);
  304 (* DIV_ASSIGN *);
  305 (* MOD_ASSIGN *);
  306 (* DECL_ASSIGN *);
  307 (* LSHIFT_ASSIGN *);
  308 (* RSHIFT_ASSIGN *);
  309 (* BITAND_ASSIGN *);
  310 (* BITXOR_ASSIGN *);
  311 (* BITOR_ASSIGN *);
  312 (* EQ *);
  313 (* NEQ *);
  314 (* LT *);
  315 (* LE *);
  316 (* GT *);
  317 (* GE *);
  318 (* AND *);
  319 (* OR *);
  320 (* NOT *);
  321 (* INC *);
  322 (* DEC *);
  323 (* NEG *);
  324 (* LPAREN *);
  325 (* RPAREN *);
  326 (* LBRACE *);
  327 (* RBRACE *);
  328 (* LBRACKET *);
  329 (* RBRACKET *);
  330 (* SEMICOLON *);
  331 (* COLON *);
  332 (* COMMA *);
  333 (* DOT *);
  334 (* TRIPLEDOT *);
  335 (* QUESTION *);
    0|]

let yytransl_block = [|
  338 (* INT_LIT *);
  339 (* BOOL_LIT *);
  340 (* CHAR_LIT *);
  341 (* FLOAT_LIT *);
  342 (* STRING_LIT *);
  343 (* IDENT *);
    0|]

let yylhs = "\255\255\
\001\000\002\000\003\000\003\000\008\000\004\000\009\000\009\000\
\010\000\010\000\012\000\013\000\013\000\013\000\013\000\014\000\
\014\000\005\000\016\000\016\000\016\000\016\000\006\000\017\000\
\018\000\018\000\021\000\021\000\022\000\022\000\019\000\019\000\
\023\000\023\000\007\000\024\000\020\000\020\000\025\000\025\000\
\025\000\025\000\025\000\025\000\026\000\026\000\027\000\027\000\
\028\000\028\000\029\000\029\000\015\000\015\000\015\000\015\000\
\015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
\015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
\015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
\015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
\015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
\015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
\015\000\011\000\011\000\011\000\011\000\030\000\030\000\031\000\
\031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
\031\000\031\000\031\000\031\000\000\000"

let yylen = "\002\000\
\006\000\002\000\000\000\002\000\002\000\002\000\006\000\004\000\
\000\000\002\000\004\000\001\000\001\000\001\000\001\000\000\000\
\002\000\002\000\005\000\004\000\004\000\003\000\002\000\009\000\
\000\000\001\000\003\000\001\000\002\000\003\000\000\000\001\000\
\001\000\003\000\002\000\013\000\000\000\002\000\001\000\001\000\
\006\000\009\000\005\000\002\000\004\000\007\000\000\000\001\000\
\000\000\001\000\001\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\002\000\002\000\002\000\002\000\003\000\004\000\
\006\000\005\000\004\000\006\000\004\000\007\000\004\000\006\000\
\003\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\
\001\000\001\000\004\000\003\000\001\000\003\000\005\000\001\000\
\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\
\001\000\001\000\001\000\001\000\002\000"

let yydefred = "\000\000\
\000\000\000\000\000\000\125\000\003\000\002\000\000\000\000\000\
\000\000\004\000\005\000\000\000\000\000\006\000\000\000\000\000\
\124\000\112\000\113\000\114\000\115\000\116\000\117\000\118\000\
\119\000\120\000\121\000\122\000\123\000\000\000\000\000\000\000\
\000\000\018\000\106\000\000\000\000\000\000\000\000\000\104\000\
\105\000\103\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\098\000\099\000\100\000\101\000\102\000\000\000\000\000\
\000\000\000\000\000\000\000\000\023\000\000\000\009\000\109\000\
\008\000\000\000\000\000\083\000\084\000\085\000\086\000\000\000\
\000\000\000\000\108\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\035\000\000\000\000\000\000\000\000\000\
\097\000\000\000\000\000\087\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\056\000\055\000\057\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\107\000\000\000\000\000\000\000\014\000\013\000\015\000\
\012\000\007\000\010\000\000\000\000\000\000\000\000\000\000\000\
\091\000\000\000\095\000\088\000\000\000\000\000\093\000\000\000\
\000\000\000\000\028\000\000\000\000\000\000\000\000\000\052\000\
\000\000\090\000\000\000\000\000\000\000\029\000\000\000\000\000\
\000\000\000\000\096\000\000\000\000\000\089\000\092\000\030\000\
\033\000\000\000\000\000\027\000\000\000\000\000\011\000\094\000\
\111\000\037\000\000\000\000\000\000\000\000\000\034\000\000\000\
\000\000\000\000\000\000\000\000\024\000\000\000\000\000\000\000\
\040\000\038\000\000\000\044\000\000\000\048\000\000\000\000\000\
\000\000\037\000\000\000\037\000\000\000\000\000\000\000\000\000\
\000\000\037\000\000\000\000\000\043\000\000\000\000\000\041\000\
\000\000\036\000\000\000\037\000\037\000\000\000\000\000\000\000\
\037\000\045\000\042\000\000\000\000\000\046\000"

let yydgoto = "\002\000\
\004\000\005\000\007\000\009\000\013\000\032\000\060\000\010\000\
\014\000\118\000\056\000\171\000\172\000\215\000\232\000\233\000\
\061\000\185\000\210\000\222\000\186\000\187\000\211\000\116\000\
\234\000\000\001\239\000\248\000\126\000\128\000\035\000"

let yysindex = "\006\000\
\034\255\000\000\191\254\000\000\000\000\000\000\035\255\232\254\
\060\255\000\000\000\000\242\254\243\254\000\000\014\255\113\008\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\058\012\025\255\086\255\
\002\255\000\000\000\000\024\255\194\008\045\255\009\255\000\000\
\000\000\000\000\243\012\243\012\243\012\243\012\243\012\138\012\
\194\008\000\000\000\000\000\000\000\000\000\000\085\255\030\255\
\186\013\243\012\021\255\107\255\000\000\070\255\000\000\000\000\
\000\000\243\012\108\255\000\000\000\000\000\000\000\000\137\014\
\194\008\217\013\000\000\069\255\243\012\243\012\243\012\071\255\
\243\012\243\012\243\012\243\012\243\012\243\012\243\012\243\012\
\243\012\243\012\243\012\243\012\243\012\243\012\243\012\243\012\
\243\012\243\012\243\012\243\012\243\012\243\012\243\012\243\012\
\243\012\243\012\243\012\243\012\243\012\243\012\243\012\194\008\
\211\014\091\255\092\255\000\000\243\012\036\255\211\014\243\012\
\000\000\093\255\194\008\000\000\042\013\098\255\153\013\090\255\
\110\013\097\255\174\014\033\255\033\255\000\000\000\000\000\000\
\237\255\237\255\044\005\219\004\138\004\211\014\211\014\211\014\
\211\014\211\014\211\014\211\014\211\014\211\014\211\014\211\014\
\211\014\125\005\125\005\230\255\230\255\230\255\230\255\091\009\
\008\009\000\000\082\255\083\255\211\014\000\000\000\000\000\000\
\000\000\000\000\000\000\087\255\211\014\243\012\102\255\243\012\
\000\000\243\012\000\000\000\000\163\012\243\012\000\000\166\255\
\113\255\109\255\000\000\194\008\194\008\112\255\243\012\000\000\
\076\013\000\000\248\013\131\255\194\008\000\000\194\008\082\255\
\133\255\155\255\000\000\136\255\243\012\000\000\000\000\000\000\
\000\000\134\255\137\255\000\000\132\255\243\012\000\000\000\000\
\000\000\000\000\194\008\149\255\211\014\234\009\000\000\082\255\
\243\012\243\012\243\254\243\012\000\000\096\255\194\254\211\014\
\000\000\000\000\151\255\000\000\023\014\000\000\150\255\061\014\
\194\008\000\000\243\012\000\000\153\255\059\010\211\014\156\255\
\140\010\000\000\219\255\243\012\000\000\221\010\252\254\000\000\
\157\255\000\000\243\012\000\000\000\000\099\014\046\011\127\011\
\000\000\000\000\000\000\208\011\219\255\000\000"

let yyrindex = "\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\145\255\000\000\
\000\000\000\000\000\000\000\000\000\000\145\255\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\234\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\019\255\000\000\000\000\000\000\000\000\000\000\166\008\000\000\
\000\000\240\254\000\000\000\000\247\008\000\000\000\000\000\000\
\000\000\000\000\000\000\027\000\108\000\000\000\000\000\000\000\
\189\000\014\001\150\003\231\003\069\003\218\004\043\005\124\005\
\205\005\030\006\111\006\192\006\017\007\098\007\179\007\004\008\
\085\008\163\002\244\002\095\001\176\001\001\002\082\002\056\004\
\137\004\000\000\168\255\000\000\072\009\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\153\009\000\000\245\254\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\171\255\000\000\000\000\000\000\000\000\000\000\000\000\
\164\255\000\000\000\000\000\000\000\000\000\000\172\255\000\000\
\000\000\130\255\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\173\255\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\160\255\000\000\000\000\168\255\
\000\000\000\000\175\255\000\000\000\000\145\255\000\000\033\012\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\172\255\000\000\178\255\000\000\000\000\000\000\249\254\000\000\
\000\000\000\000\000\000\176\255\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000"

let yygindex = "\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\243\255\000\000\000\000\000\000\034\000\247\255\
\000\000\021\000\013\000\217\255\000\000\047\000\000\000\000\000\
\000\000\244\255\000\000\004\000\103\255\053\000\000\000"

let yytablesize = 4114
let yytable = "\033\000\
\016\000\017\000\039\000\034\000\003\001\081\000\001\000\018\000\
\019\000\020\000\021\000\022\000\023\000\024\000\025\000\026\000\
\027\000\028\000\029\000\036\000\190\000\006\000\192\000\065\000\
\062\000\022\000\022\000\022\000\196\000\022\000\022\000\022\000\
\022\000\022\000\022\000\075\000\003\000\204\000\008\000\022\000\
\022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
\022\000\022\000\022\000\108\000\166\000\167\000\168\000\169\000\
\107\000\037\000\030\000\122\000\022\000\011\000\050\000\057\000\
\012\000\004\001\050\000\084\000\085\000\086\000\108\000\236\000\
\015\000\031\000\058\000\107\000\068\000\069\000\070\000\071\000\
\072\000\074\000\022\000\022\000\022\000\076\000\022\000\059\000\
\062\000\022\000\022\000\113\000\022\000\063\000\066\000\067\000\
\076\000\081\000\162\000\119\000\022\000\022\000\022\000\022\000\
\022\000\022\000\170\000\114\000\115\000\175\000\125\000\127\000\
\129\000\117\000\131\000\132\000\133\000\134\000\135\000\136\000\
\137\000\138\000\139\000\140\000\141\000\142\000\143\000\144\000\
\145\000\146\000\147\000\148\000\149\000\150\000\151\000\152\000\
\153\000\154\000\155\000\156\000\157\000\158\000\159\000\160\000\
\161\000\058\000\016\000\016\000\016\000\016\000\165\000\120\000\
\077\000\173\000\078\000\124\000\079\000\130\000\163\000\164\000\
\179\000\080\000\174\000\077\000\182\000\078\000\177\000\079\000\
\184\000\188\000\198\000\191\000\080\000\189\000\201\000\202\000\
\017\000\017\000\017\000\017\000\017\000\199\000\203\000\208\000\
\200\000\209\000\018\000\019\000\020\000\021\000\022\000\023\000\
\024\000\025\000\026\000\027\000\028\000\029\000\214\000\207\000\
\016\000\213\000\246\000\218\000\249\000\223\000\216\000\125\000\
\231\000\125\000\254\000\193\000\219\000\033\000\195\000\125\000\
\224\000\238\000\220\000\241\000\007\001\008\001\250\000\243\000\
\125\000\012\001\005\001\209\000\255\000\252\000\017\000\109\000\
\231\000\001\000\110\000\231\000\025\000\030\000\127\000\026\000\
\231\000\031\000\032\000\197\000\235\000\049\000\212\000\221\000\
\047\000\231\000\231\000\049\000\064\000\245\000\231\000\001\001\
\014\001\217\000\125\000\237\000\000\000\240\000\082\000\083\000\
\084\000\085\000\086\000\087\000\088\000\082\000\083\000\084\000\
\085\000\086\000\000\000\000\000\247\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\247\000\000\000\000\000\
\000\000\053\000\053\000\053\000\006\001\053\000\053\000\053\000\
\053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
\053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
\053\000\053\000\053\000\053\000\053\000\000\000\000\000\000\000\
\053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
\053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
\053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
\053\000\053\000\053\000\053\000\053\000\000\000\053\000\053\000\
\053\000\053\000\053\000\053\000\053\000\053\000\053\000\000\000\
\000\000\000\000\000\000\000\000\053\000\053\000\053\000\053\000\
\053\000\053\000\054\000\054\000\054\000\000\000\054\000\054\000\
\054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
\054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
\054\000\054\000\054\000\054\000\054\000\054\000\000\000\000\000\
\000\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
\054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
\054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
\054\000\054\000\054\000\054\000\054\000\054\000\000\000\054\000\
\054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
\000\000\000\000\000\000\000\000\000\000\054\000\054\000\054\000\
\054\000\054\000\054\000\058\000\058\000\058\000\000\000\058\000\
\058\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
\058\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
\058\000\058\000\058\000\058\000\058\000\000\000\000\000\000\000\
\000\000\000\000\058\000\058\000\058\000\058\000\058\000\058\000\
\058\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
\058\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
\058\000\058\000\058\000\058\000\058\000\058\000\058\000\000\000\
\058\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
\058\000\000\000\000\000\000\000\000\000\000\000\058\000\058\000\
\058\000\058\000\058\000\058\000\059\000\059\000\059\000\000\000\
\059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
\059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
\059\000\059\000\059\000\059\000\059\000\059\000\000\000\000\000\
\000\000\000\000\000\000\059\000\059\000\059\000\059\000\059\000\
\059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
\059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
\059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
\000\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
\059\000\059\000\000\000\000\000\000\000\000\000\000\000\059\000\
\059\000\059\000\059\000\059\000\059\000\065\000\065\000\065\000\
\000\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
\065\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
\065\000\065\000\065\000\065\000\065\000\065\000\065\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\065\000\065\000\
\065\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
\065\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
\065\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
\065\000\000\000\065\000\065\000\065\000\065\000\065\000\065\000\
\065\000\065\000\065\000\000\000\000\000\000\000\000\000\000\000\
\065\000\065\000\065\000\065\000\065\000\065\000\066\000\066\000\
\066\000\000\000\066\000\066\000\066\000\066\000\066\000\066\000\
\066\000\066\000\066\000\066\000\066\000\066\000\066\000\066\000\
\066\000\066\000\066\000\066\000\066\000\066\000\066\000\066\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\066\000\
\066\000\066\000\066\000\066\000\066\000\066\000\066\000\066\000\
\066\000\066\000\066\000\066\000\066\000\066\000\066\000\066\000\
\066\000\066\000\066\000\066\000\066\000\066\000\066\000\066\000\
\066\000\066\000\000\000\066\000\066\000\066\000\066\000\066\000\
\066\000\066\000\066\000\066\000\000\000\000\000\000\000\000\000\
\000\000\066\000\066\000\066\000\066\000\066\000\066\000\067\000\
\067\000\067\000\000\000\067\000\067\000\067\000\067\000\067\000\
\067\000\067\000\067\000\067\000\067\000\067\000\067\000\067\000\
\067\000\067\000\067\000\067\000\067\000\067\000\067\000\067\000\
\067\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\067\000\067\000\067\000\067\000\067\000\067\000\067\000\067\000\
\067\000\067\000\067\000\067\000\067\000\067\000\067\000\067\000\
\067\000\067\000\067\000\067\000\067\000\067\000\067\000\067\000\
\067\000\067\000\067\000\000\000\067\000\067\000\067\000\067\000\
\067\000\067\000\067\000\067\000\067\000\000\000\000\000\000\000\
\000\000\000\000\067\000\067\000\067\000\067\000\067\000\067\000\
\068\000\068\000\068\000\000\000\068\000\068\000\068\000\068\000\
\068\000\068\000\068\000\068\000\068\000\068\000\068\000\068\000\
\068\000\068\000\068\000\068\000\068\000\068\000\068\000\068\000\
\068\000\068\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\068\000\068\000\068\000\068\000\068\000\068\000\068\000\
\068\000\068\000\068\000\068\000\068\000\068\000\068\000\068\000\
\068\000\068\000\068\000\068\000\068\000\068\000\068\000\068\000\
\068\000\068\000\068\000\068\000\000\000\068\000\068\000\068\000\
\068\000\068\000\068\000\068\000\068\000\068\000\000\000\000\000\
\000\000\000\000\000\000\068\000\068\000\068\000\068\000\068\000\
\068\000\063\000\063\000\063\000\000\000\063\000\063\000\063\000\
\063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
\063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
\063\000\063\000\063\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\063\000\063\000\063\000\063\000\063\000\063\000\
\063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
\063\000\063\000\063\000\063\000\000\000\000\000\000\000\000\000\
\063\000\063\000\063\000\063\000\063\000\000\000\063\000\063\000\
\063\000\063\000\063\000\063\000\063\000\063\000\063\000\000\000\
\000\000\000\000\000\000\000\000\063\000\063\000\063\000\063\000\
\063\000\063\000\064\000\064\000\064\000\000\000\064\000\064\000\
\064\000\064\000\064\000\064\000\064\000\064\000\064\000\064\000\
\064\000\064\000\064\000\064\000\064\000\064\000\064\000\064\000\
\064\000\064\000\064\000\064\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\064\000\064\000\064\000\064\000\064\000\
\064\000\064\000\064\000\064\000\064\000\064\000\064\000\064\000\
\064\000\064\000\064\000\064\000\064\000\000\000\000\000\000\000\
\000\000\064\000\064\000\064\000\064\000\064\000\000\000\064\000\
\064\000\064\000\064\000\064\000\064\000\064\000\064\000\064\000\
\000\000\000\000\000\000\000\000\000\000\064\000\064\000\064\000\
\064\000\064\000\064\000\062\000\062\000\062\000\000\000\062\000\
\062\000\062\000\062\000\062\000\062\000\062\000\062\000\062\000\
\062\000\062\000\062\000\062\000\062\000\062\000\062\000\062\000\
\062\000\062\000\062\000\062\000\062\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\062\000\062\000\062\000\062\000\
\062\000\062\000\062\000\062\000\062\000\062\000\062\000\062\000\
\062\000\062\000\062\000\062\000\000\000\000\000\000\000\000\000\
\000\000\000\000\062\000\062\000\062\000\062\000\062\000\000\000\
\062\000\062\000\062\000\062\000\062\000\062\000\062\000\062\000\
\062\000\000\000\000\000\000\000\000\000\000\000\062\000\062\000\
\062\000\062\000\062\000\062\000\060\000\060\000\060\000\000\000\
\060\000\060\000\060\000\060\000\060\000\060\000\060\000\060\000\
\060\000\060\000\060\000\060\000\060\000\060\000\060\000\060\000\
\060\000\060\000\060\000\060\000\060\000\060\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\060\000\060\000\060\000\
\000\000\060\000\060\000\060\000\060\000\060\000\060\000\060\000\
\060\000\060\000\060\000\060\000\060\000\000\000\000\000\000\000\
\000\000\000\000\000\000\060\000\060\000\060\000\060\000\060\000\
\000\000\060\000\060\000\060\000\060\000\060\000\060\000\060\000\
\060\000\060\000\000\000\000\000\000\000\000\000\000\000\060\000\
\060\000\060\000\060\000\060\000\060\000\061\000\061\000\061\000\
\000\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
\061\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
\061\000\061\000\061\000\061\000\061\000\061\000\061\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\061\000\
\061\000\000\000\061\000\061\000\061\000\061\000\061\000\061\000\
\061\000\061\000\061\000\061\000\061\000\061\000\000\000\000\000\
\000\000\000\000\000\000\000\000\061\000\061\000\061\000\061\000\
\061\000\000\000\061\000\061\000\061\000\061\000\061\000\061\000\
\061\000\061\000\061\000\000\000\000\000\000\000\000\000\000\000\
\061\000\061\000\061\000\061\000\061\000\061\000\069\000\069\000\
\069\000\000\000\069\000\069\000\069\000\069\000\069\000\069\000\
\069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
\069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\069\000\000\000\069\000\069\000\069\000\069\000\069\000\
\069\000\069\000\069\000\069\000\069\000\069\000\069\000\000\000\
\000\000\000\000\000\000\000\000\000\000\069\000\069\000\069\000\
\069\000\069\000\000\000\069\000\069\000\069\000\069\000\069\000\
\069\000\069\000\069\000\069\000\000\000\000\000\000\000\000\000\
\000\000\069\000\069\000\069\000\069\000\069\000\069\000\070\000\
\070\000\070\000\000\000\070\000\070\000\070\000\070\000\070\000\
\070\000\070\000\070\000\070\000\070\000\070\000\070\000\070\000\
\070\000\070\000\070\000\070\000\070\000\070\000\070\000\070\000\
\070\000\000\000\082\000\083\000\084\000\085\000\086\000\087\000\
\088\000\000\000\070\000\000\000\070\000\070\000\070\000\070\000\
\070\000\070\000\070\000\070\000\070\000\070\000\070\000\070\000\
\000\000\104\000\105\000\106\000\107\000\108\000\109\000\070\000\
\070\000\070\000\070\000\000\000\070\000\070\000\070\000\070\000\
\070\000\070\000\070\000\070\000\070\000\000\000\000\000\000\000\
\000\000\000\000\070\000\070\000\070\000\070\000\070\000\070\000\
\071\000\071\000\071\000\000\000\071\000\071\000\071\000\071\000\
\071\000\071\000\071\000\071\000\071\000\071\000\071\000\071\000\
\071\000\071\000\071\000\071\000\071\000\071\000\071\000\071\000\
\071\000\071\000\000\000\082\000\083\000\084\000\085\000\086\000\
\087\000\088\000\089\000\071\000\000\000\091\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\104\000\105\000\106\000\107\000\108\000\109\000\
\000\000\071\000\071\000\071\000\000\000\071\000\071\000\071\000\
\071\000\071\000\071\000\071\000\071\000\071\000\000\000\000\000\
\000\000\000\000\000\000\071\000\071\000\071\000\071\000\071\000\
\071\000\073\000\073\000\073\000\000\000\073\000\073\000\073\000\
\073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
\073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
\073\000\073\000\073\000\000\000\082\000\083\000\084\000\085\000\
\086\000\087\000\088\000\000\000\073\000\000\000\091\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\104\000\105\000\106\000\107\000\108\000\
\109\000\000\000\073\000\073\000\073\000\000\000\073\000\073\000\
\073\000\073\000\073\000\073\000\073\000\073\000\073\000\000\000\
\000\000\000\000\000\000\000\000\073\000\073\000\073\000\073\000\
\073\000\073\000\074\000\074\000\074\000\000\000\074\000\074\000\
\074\000\074\000\074\000\074\000\074\000\074\000\074\000\074\000\
\074\000\074\000\074\000\074\000\074\000\074\000\074\000\074\000\
\074\000\074\000\074\000\074\000\000\000\082\000\083\000\084\000\
\085\000\086\000\087\000\088\000\000\000\074\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\106\000\107\000\
\108\000\109\000\000\000\074\000\074\000\074\000\000\000\074\000\
\074\000\074\000\074\000\074\000\074\000\074\000\074\000\074\000\
\000\000\000\000\000\000\000\000\000\000\074\000\074\000\074\000\
\074\000\074\000\074\000\075\000\075\000\075\000\000\000\075\000\
\075\000\075\000\075\000\075\000\075\000\075\000\075\000\075\000\
\075\000\075\000\075\000\075\000\075\000\075\000\075\000\075\000\
\075\000\075\000\075\000\075\000\075\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\075\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\075\000\075\000\075\000\000\000\
\075\000\075\000\075\000\075\000\075\000\075\000\075\000\075\000\
\075\000\000\000\000\000\000\000\000\000\000\000\075\000\075\000\
\075\000\075\000\075\000\075\000\076\000\076\000\076\000\000\000\
\076\000\076\000\076\000\076\000\076\000\076\000\076\000\076\000\
\076\000\076\000\076\000\076\000\076\000\076\000\076\000\076\000\
\076\000\076\000\076\000\076\000\076\000\076\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\076\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\076\000\076\000\076\000\
\000\000\076\000\076\000\076\000\076\000\076\000\076\000\076\000\
\076\000\076\000\000\000\000\000\000\000\000\000\000\000\076\000\
\076\000\076\000\076\000\076\000\076\000\077\000\077\000\077\000\
\000\000\077\000\077\000\077\000\077\000\077\000\077\000\077\000\
\077\000\077\000\077\000\077\000\077\000\077\000\077\000\077\000\
\077\000\077\000\077\000\077\000\077\000\077\000\077\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\077\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\077\000\077\000\
\077\000\000\000\077\000\077\000\077\000\077\000\077\000\077\000\
\077\000\077\000\077\000\000\000\000\000\000\000\000\000\000\000\
\077\000\077\000\077\000\077\000\077\000\077\000\072\000\072\000\
\072\000\000\000\072\000\072\000\072\000\072\000\072\000\072\000\
\072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
\072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\072\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\072\000\
\072\000\072\000\000\000\072\000\072\000\072\000\072\000\072\000\
\072\000\072\000\072\000\072\000\000\000\000\000\000\000\000\000\
\000\000\072\000\072\000\072\000\072\000\072\000\072\000\078\000\
\078\000\078\000\000\000\078\000\078\000\078\000\078\000\078\000\
\078\000\078\000\078\000\078\000\078\000\078\000\078\000\078\000\
\078\000\078\000\078\000\078\000\078\000\078\000\078\000\078\000\
\078\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\078\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\078\000\078\000\078\000\000\000\078\000\078\000\078\000\078\000\
\078\000\078\000\078\000\078\000\078\000\000\000\000\000\000\000\
\000\000\000\000\078\000\078\000\078\000\078\000\078\000\078\000\
\079\000\079\000\079\000\000\000\079\000\079\000\079\000\079\000\
\079\000\079\000\079\000\079\000\079\000\079\000\079\000\079\000\
\079\000\079\000\079\000\079\000\079\000\079\000\079\000\079\000\
\079\000\079\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\079\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\079\000\079\000\079\000\000\000\079\000\079\000\079\000\
\079\000\079\000\079\000\079\000\079\000\079\000\000\000\000\000\
\000\000\000\000\000\000\079\000\079\000\079\000\079\000\079\000\
\079\000\080\000\080\000\080\000\000\000\080\000\080\000\080\000\
\080\000\080\000\080\000\080\000\080\000\080\000\080\000\080\000\
\080\000\080\000\080\000\080\000\080\000\080\000\080\000\080\000\
\080\000\080\000\080\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\080\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\080\000\080\000\080\000\000\000\080\000\080\000\
\080\000\080\000\080\000\080\000\080\000\080\000\080\000\000\000\
\000\000\000\000\000\000\000\000\080\000\080\000\080\000\080\000\
\080\000\080\000\081\000\081\000\081\000\000\000\081\000\081\000\
\081\000\081\000\081\000\081\000\081\000\081\000\081\000\081\000\
\081\000\081\000\081\000\081\000\081\000\081\000\081\000\081\000\
\081\000\081\000\081\000\081\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\081\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\081\000\081\000\081\000\000\000\081\000\
\081\000\081\000\081\000\081\000\081\000\081\000\081\000\081\000\
\000\000\000\000\000\000\000\000\000\000\081\000\081\000\081\000\
\081\000\081\000\081\000\082\000\082\000\082\000\000\000\082\000\
\082\000\082\000\082\000\082\000\082\000\082\000\082\000\082\000\
\082\000\082\000\082\000\082\000\082\000\082\000\082\000\082\000\
\082\000\082\000\082\000\082\000\082\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\082\000\017\000\
\000\000\000\000\000\000\000\000\000\000\018\000\019\000\020\000\
\021\000\022\000\023\000\024\000\025\000\026\000\027\000\028\000\
\029\000\000\000\000\000\000\000\082\000\082\000\082\000\000\000\
\082\000\082\000\082\000\082\000\082\000\082\000\082\000\082\000\
\082\000\000\000\000\000\000\000\000\000\000\000\082\000\082\000\
\082\000\082\000\082\000\082\000\021\000\021\000\021\000\000\000\
\021\000\021\000\021\000\021\000\021\000\021\000\000\000\000\000\
\030\000\000\000\021\000\021\000\021\000\021\000\021\000\021\000\
\021\000\021\000\021\000\021\000\021\000\021\000\000\000\038\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\000\
\017\000\000\000\000\000\000\000\000\000\000\000\018\000\019\000\
\020\000\021\000\022\000\023\000\024\000\025\000\026\000\027\000\
\028\000\029\000\000\000\000\000\000\000\021\000\021\000\021\000\
\000\000\021\000\000\000\000\000\021\000\021\000\000\000\021\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\000\
\021\000\021\000\021\000\021\000\021\000\051\000\051\000\051\000\
\000\000\051\000\051\000\051\000\051\000\051\000\051\000\000\000\
\000\000\030\000\000\000\051\000\051\000\051\000\051\000\051\000\
\051\000\051\000\051\000\051\000\051\000\051\000\051\000\000\000\
\064\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\051\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\082\000\083\000\084\000\085\000\086\000\087\000\088\000\089\000\
\090\000\000\000\091\000\000\000\000\000\000\000\051\000\051\000\
\051\000\000\000\051\000\051\000\000\000\051\000\051\000\104\000\
\105\000\106\000\107\000\108\000\109\000\110\000\000\000\000\000\
\051\000\051\000\051\000\051\000\051\000\051\000\020\000\020\000\
\020\000\000\000\020\000\020\000\020\000\020\000\020\000\020\000\
\000\000\000\000\000\000\000\000\020\000\020\000\020\000\020\000\
\020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\020\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\082\000\083\000\084\000\085\000\086\000\
\087\000\088\000\089\000\090\000\000\000\091\000\000\000\020\000\
\020\000\020\000\000\000\020\000\000\000\000\000\020\000\020\000\
\000\000\020\000\104\000\105\000\106\000\107\000\108\000\109\000\
\000\000\020\000\020\000\020\000\020\000\020\000\020\000\019\000\
\019\000\019\000\000\000\019\000\019\000\019\000\019\000\019\000\
\019\000\000\000\000\000\000\000\000\000\019\000\019\000\019\000\
\019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
\019\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\019\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\019\000\019\000\019\000\000\000\019\000\000\000\000\000\019\000\
\019\000\000\000\019\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\019\000\019\000\019\000\019\000\019\000\019\000\
\225\000\040\000\226\000\000\000\041\000\227\000\228\000\016\000\
\017\000\042\000\000\000\000\000\000\000\000\000\018\000\019\000\
\020\000\021\000\022\000\023\000\024\000\025\000\026\000\027\000\
\028\000\029\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\043\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\044\000\045\000\046\000\000\000\047\000\000\000\000\000\
\229\000\048\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\050\000\051\000\052\000\053\000\054\000\
\230\000\225\000\040\000\226\000\000\000\041\000\227\000\228\000\
\016\000\017\000\042\000\000\000\000\000\000\000\000\000\018\000\
\019\000\020\000\021\000\022\000\023\000\024\000\025\000\026\000\
\027\000\028\000\029\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\043\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\044\000\045\000\046\000\000\000\047\000\000\000\
\000\000\251\000\048\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\050\000\051\000\052\000\053\000\
\054\000\230\000\225\000\040\000\226\000\000\000\041\000\227\000\
\228\000\016\000\017\000\042\000\000\000\000\000\000\000\000\000\
\018\000\019\000\020\000\021\000\022\000\023\000\024\000\025\000\
\026\000\027\000\028\000\029\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\043\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\044\000\045\000\046\000\000\000\047\000\
\000\000\000\000\253\000\048\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\050\000\051\000\052\000\
\053\000\054\000\230\000\225\000\040\000\226\000\000\000\041\000\
\227\000\228\000\016\000\017\000\042\000\000\000\000\000\000\000\
\000\000\018\000\019\000\020\000\021\000\022\000\023\000\024\000\
\025\000\026\000\027\000\028\000\029\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\043\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\044\000\045\000\046\000\000\000\
\047\000\000\000\000\000\002\001\048\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\050\000\051\000\
\052\000\053\000\054\000\230\000\225\000\040\000\226\000\000\000\
\041\000\227\000\228\000\016\000\017\000\042\000\000\000\000\000\
\000\000\000\000\018\000\019\000\020\000\021\000\022\000\023\000\
\024\000\025\000\026\000\027\000\028\000\029\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\043\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\044\000\045\000\046\000\
\000\000\047\000\000\000\000\000\010\001\048\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\050\000\
\051\000\052\000\053\000\054\000\230\000\225\000\040\000\226\000\
\000\000\041\000\227\000\228\000\016\000\017\000\042\000\000\000\
\000\000\000\000\000\000\018\000\019\000\020\000\021\000\022\000\
\023\000\024\000\025\000\026\000\027\000\028\000\029\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\043\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\044\000\045\000\
\046\000\000\000\047\000\000\000\000\000\011\001\048\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\050\000\051\000\052\000\053\000\054\000\230\000\225\000\040\000\
\226\000\000\000\041\000\227\000\228\000\016\000\017\000\042\000\
\000\000\000\000\000\000\000\000\018\000\019\000\020\000\021\000\
\022\000\023\000\024\000\025\000\026\000\027\000\028\000\029\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\043\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\044\000\
\045\000\046\000\000\000\047\000\000\000\000\000\013\001\048\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\050\000\051\000\052\000\053\000\054\000\230\000\039\000\
\039\000\039\000\000\000\039\000\039\000\039\000\039\000\039\000\
\039\000\000\000\000\000\000\000\000\000\039\000\039\000\039\000\
\039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
\039\000\040\000\000\000\000\000\041\000\000\000\000\000\000\000\
\017\000\042\000\039\000\000\000\000\000\000\000\018\000\019\000\
\020\000\021\000\022\000\023\000\024\000\025\000\026\000\027\000\
\028\000\029\000\000\000\000\000\000\000\000\000\000\000\000\000\
\039\000\039\000\039\000\043\000\039\000\000\000\000\000\039\000\
\039\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\039\000\039\000\039\000\039\000\039\000\039\000\
\000\000\044\000\045\000\046\000\000\000\047\000\000\000\000\000\
\000\000\048\000\049\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\050\000\051\000\052\000\053\000\054\000\
\055\000\040\000\000\000\000\000\041\000\000\000\000\000\000\000\
\017\000\042\000\000\000\000\000\000\000\000\000\018\000\019\000\
\020\000\021\000\022\000\023\000\024\000\025\000\026\000\027\000\
\028\000\029\000\040\000\000\000\000\000\041\000\000\000\000\000\
\000\000\017\000\042\000\043\000\000\000\000\000\000\000\018\000\
\019\000\020\000\021\000\022\000\023\000\024\000\025\000\026\000\
\027\000\028\000\029\000\000\000\000\000\000\000\000\000\000\000\
\000\000\044\000\045\000\046\000\043\000\047\000\000\000\000\000\
\000\000\048\000\073\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\050\000\051\000\052\000\053\000\054\000\
\055\000\000\000\044\000\045\000\046\000\000\000\047\000\000\000\
\000\000\000\000\048\000\194\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\050\000\051\000\052\000\053\000\
\054\000\055\000\040\000\000\000\000\000\041\000\000\000\000\000\
\000\000\017\000\042\000\000\000\000\000\000\000\000\000\018\000\
\019\000\020\000\021\000\022\000\023\000\024\000\025\000\026\000\
\027\000\028\000\029\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\043\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\044\000\045\000\046\000\000\000\047\000\000\000\
\000\000\000\000\048\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\050\000\051\000\052\000\053\000\
\054\000\055\000\082\000\083\000\084\000\085\000\086\000\087\000\
\088\000\089\000\090\000\000\000\091\000\092\000\093\000\094\000\
\095\000\096\000\097\000\098\000\099\000\100\000\101\000\102\000\
\103\000\104\000\105\000\106\000\107\000\108\000\109\000\110\000\
\111\000\000\000\000\000\000\000\082\000\083\000\084\000\085\000\
\086\000\087\000\088\000\089\000\090\000\176\000\091\000\092\000\
\093\000\094\000\095\000\096\000\097\000\098\000\099\000\100\000\
\101\000\102\000\103\000\104\000\105\000\106\000\107\000\108\000\
\109\000\110\000\111\000\000\000\000\000\000\000\082\000\083\000\
\084\000\085\000\086\000\087\000\088\000\089\000\090\000\205\000\
\091\000\092\000\093\000\094\000\095\000\096\000\097\000\098\000\
\099\000\100\000\101\000\102\000\103\000\104\000\105\000\106\000\
\107\000\108\000\109\000\110\000\111\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\180\000\000\000\
\181\000\082\000\083\000\084\000\085\000\086\000\087\000\088\000\
\089\000\090\000\000\000\091\000\092\000\093\000\094\000\095\000\
\096\000\097\000\098\000\099\000\100\000\101\000\102\000\103\000\
\104\000\105\000\106\000\107\000\108\000\109\000\110\000\111\000\
\000\000\000\000\082\000\083\000\084\000\085\000\086\000\087\000\
\088\000\089\000\090\000\178\000\091\000\092\000\093\000\094\000\
\095\000\096\000\097\000\098\000\099\000\100\000\101\000\102\000\
\103\000\104\000\105\000\106\000\107\000\108\000\109\000\110\000\
\111\000\082\000\083\000\084\000\085\000\086\000\087\000\088\000\
\089\000\090\000\112\000\091\000\092\000\093\000\094\000\095\000\
\096\000\097\000\098\000\099\000\100\000\101\000\102\000\103\000\
\104\000\105\000\106\000\107\000\108\000\109\000\110\000\111\000\
\082\000\083\000\084\000\085\000\086\000\087\000\088\000\089\000\
\090\000\123\000\091\000\092\000\093\000\094\000\095\000\096\000\
\097\000\098\000\099\000\100\000\101\000\102\000\103\000\104\000\
\105\000\106\000\107\000\108\000\109\000\110\000\111\000\082\000\
\083\000\084\000\085\000\086\000\087\000\088\000\089\000\090\000\
\206\000\091\000\092\000\093\000\094\000\095\000\096\000\097\000\
\098\000\099\000\100\000\101\000\102\000\103\000\104\000\105\000\
\106\000\107\000\108\000\109\000\110\000\111\000\000\000\000\000\
\000\000\000\000\000\000\000\000\242\000\082\000\083\000\084\000\
\085\000\086\000\087\000\088\000\089\000\090\000\000\000\091\000\
\092\000\093\000\094\000\095\000\096\000\097\000\098\000\099\000\
\100\000\101\000\102\000\103\000\104\000\105\000\106\000\107\000\
\108\000\109\000\110\000\111\000\000\000\000\000\000\000\000\000\
\000\000\000\000\244\000\082\000\083\000\084\000\085\000\086\000\
\087\000\088\000\089\000\090\000\000\000\091\000\092\000\093\000\
\094\000\095\000\096\000\097\000\098\000\099\000\100\000\101\000\
\102\000\103\000\104\000\105\000\106\000\107\000\108\000\109\000\
\110\000\111\000\000\000\000\000\000\000\000\000\000\000\000\000\
\009\001\082\000\083\000\084\000\085\000\086\000\087\000\088\000\
\089\000\090\000\000\000\091\000\092\000\093\000\094\000\095\000\
\096\000\097\000\098\000\099\000\100\000\101\000\102\000\103\000\
\104\000\105\000\106\000\107\000\108\000\109\000\110\000\111\000\
\000\000\000\000\000\000\000\000\000\000\121\000\082\000\083\000\
\084\000\085\000\086\000\087\000\088\000\089\000\090\000\000\000\
\091\000\092\000\093\000\094\000\095\000\096\000\097\000\098\000\
\099\000\100\000\101\000\102\000\103\000\104\000\105\000\106\000\
\107\000\108\000\109\000\110\000\111\000\000\000\000\000\000\000\
\000\000\000\000\183\000\082\000\083\000\084\000\085\000\086\000\
\087\000\088\000\089\000\090\000\000\000\091\000\092\000\093\000\
\094\000\095\000\096\000\097\000\098\000\099\000\100\000\101\000\
\102\000\103\000\104\000\105\000\106\000\107\000\108\000\109\000\
\110\000\111\000"

let yycheck = "\013\000\
\014\001\015\001\016\000\013\000\009\001\068\001\001\000\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\006\001\174\000\087\001\176\000\037\000\
\087\001\007\001\008\001\009\001\182\000\011\001\012\001\013\001\
\014\001\015\001\016\001\049\000\003\001\191\000\004\001\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\068\001\017\001\018\001\019\001\020\001\
\068\001\044\001\072\001\073\000\042\001\086\001\070\001\030\000\
\005\001\070\001\074\001\035\001\036\001\037\001\087\001\225\000\
\087\001\087\001\050\001\087\001\043\000\044\000\045\000\046\000\
\047\000\048\000\064\001\065\001\066\001\001\001\068\001\002\001\
\087\001\071\001\072\001\058\000\074\001\070\001\050\001\087\001\
\001\001\068\001\112\000\066\000\082\001\083\001\084\001\085\001\
\086\001\087\001\071\001\087\001\002\001\123\000\077\000\078\000\
\079\000\044\001\081\000\082\000\083\000\084\000\085\000\086\000\
\087\000\088\000\089\000\090\000\091\000\092\000\093\000\094\000\
\095\000\096\000\097\000\098\000\099\000\100\000\101\000\102\000\
\103\000\104\000\105\000\106\000\107\000\108\000\109\000\110\000\
\111\000\050\001\017\001\018\001\019\001\020\001\117\000\044\001\
\068\001\120\000\070\001\087\001\072\001\087\001\068\001\068\001\
\071\001\077\001\070\001\068\001\068\001\070\001\069\001\072\001\
\087\001\087\001\184\000\070\001\077\001\087\001\188\000\189\000\
\017\001\018\001\019\001\020\001\015\001\069\001\071\001\197\000\
\076\001\199\000\021\001\022\001\023\001\024\001\025\001\026\001\
\027\001\028\001\029\001\030\001\031\001\032\001\044\001\069\001\
\071\001\069\001\242\000\070\001\244\000\219\000\071\001\174\000\
\222\000\176\000\250\000\178\000\076\001\227\000\181\000\182\000\
\068\001\227\000\087\001\069\001\004\001\005\001\070\001\074\001\
\191\000\009\001\070\001\241\000\010\001\074\001\071\001\087\001\
\246\000\000\000\071\001\249\000\069\001\072\001\205\000\069\001\
\254\000\070\001\070\001\078\001\224\000\070\001\200\000\214\000\
\074\001\007\001\008\001\074\001\087\001\241\000\012\001\252\000\
\013\001\205\000\225\000\226\000\255\255\228\000\033\001\034\001\
\035\001\036\001\037\001\038\001\039\001\033\001\034\001\035\001\
\036\001\037\001\255\255\255\255\243\000\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\252\000\255\255\255\255\
\255\255\007\001\008\001\009\001\003\001\011\001\012\001\013\001\
\014\001\015\001\016\001\017\001\018\001\019\001\020\001\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\033\001\034\001\255\255\255\255\255\255\
\038\001\039\001\040\001\041\001\042\001\043\001\044\001\045\001\
\046\001\047\001\048\001\049\001\050\001\051\001\052\001\053\001\
\054\001\055\001\056\001\057\001\058\001\059\001\060\001\061\001\
\062\001\063\001\064\001\065\001\066\001\255\255\068\001\069\001\
\070\001\071\001\072\001\073\001\074\001\075\001\076\001\255\255\
\255\255\255\255\255\255\255\255\082\001\083\001\084\001\085\001\
\086\001\087\001\007\001\008\001\009\001\255\255\011\001\012\001\
\013\001\014\001\015\001\016\001\017\001\018\001\019\001\020\001\
\021\001\022\001\023\001\024\001\025\001\026\001\027\001\028\001\
\029\001\030\001\031\001\032\001\033\001\034\001\255\255\255\255\
\255\255\038\001\039\001\040\001\041\001\042\001\043\001\044\001\
\045\001\046\001\047\001\048\001\049\001\050\001\051\001\052\001\
\053\001\054\001\055\001\056\001\057\001\058\001\059\001\060\001\
\061\001\062\001\063\001\064\001\065\001\066\001\255\255\068\001\
\069\001\070\001\071\001\072\001\073\001\074\001\075\001\076\001\
\255\255\255\255\255\255\255\255\255\255\082\001\083\001\084\001\
\085\001\086\001\087\001\007\001\008\001\009\001\255\255\011\001\
\012\001\013\001\014\001\015\001\016\001\017\001\018\001\019\001\
\020\001\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\032\001\255\255\255\255\255\255\
\255\255\255\255\038\001\039\001\040\001\041\001\042\001\043\001\
\044\001\045\001\046\001\047\001\048\001\049\001\050\001\051\001\
\052\001\053\001\054\001\055\001\056\001\057\001\058\001\059\001\
\060\001\061\001\062\001\063\001\064\001\065\001\066\001\255\255\
\068\001\069\001\070\001\071\001\072\001\073\001\074\001\075\001\
\076\001\255\255\255\255\255\255\255\255\255\255\082\001\083\001\
\084\001\085\001\086\001\087\001\007\001\008\001\009\001\255\255\
\011\001\012\001\013\001\014\001\015\001\016\001\017\001\018\001\
\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\
\027\001\028\001\029\001\030\001\031\001\032\001\255\255\255\255\
\255\255\255\255\255\255\038\001\039\001\040\001\041\001\042\001\
\043\001\044\001\045\001\046\001\047\001\048\001\049\001\050\001\
\051\001\052\001\053\001\054\001\055\001\056\001\057\001\058\001\
\059\001\060\001\061\001\062\001\063\001\064\001\065\001\066\001\
\255\255\068\001\069\001\070\001\071\001\072\001\073\001\074\001\
\075\001\076\001\255\255\255\255\255\255\255\255\255\255\082\001\
\083\001\084\001\085\001\086\001\087\001\007\001\008\001\009\001\
\255\255\011\001\012\001\013\001\014\001\015\001\016\001\017\001\
\018\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\031\001\032\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\040\001\041\001\
\042\001\043\001\044\001\045\001\046\001\047\001\048\001\049\001\
\050\001\051\001\052\001\053\001\054\001\055\001\056\001\057\001\
\058\001\059\001\060\001\061\001\062\001\063\001\064\001\065\001\
\066\001\255\255\068\001\069\001\070\001\071\001\072\001\073\001\
\074\001\075\001\076\001\255\255\255\255\255\255\255\255\255\255\
\082\001\083\001\084\001\085\001\086\001\087\001\007\001\008\001\
\009\001\255\255\011\001\012\001\013\001\014\001\015\001\016\001\
\017\001\018\001\019\001\020\001\021\001\022\001\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\031\001\032\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\040\001\
\041\001\042\001\043\001\044\001\045\001\046\001\047\001\048\001\
\049\001\050\001\051\001\052\001\053\001\054\001\055\001\056\001\
\057\001\058\001\059\001\060\001\061\001\062\001\063\001\064\001\
\065\001\066\001\255\255\068\001\069\001\070\001\071\001\072\001\
\073\001\074\001\075\001\076\001\255\255\255\255\255\255\255\255\
\255\255\082\001\083\001\084\001\085\001\086\001\087\001\007\001\
\008\001\009\001\255\255\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\040\001\041\001\042\001\043\001\044\001\045\001\046\001\047\001\
\048\001\049\001\050\001\051\001\052\001\053\001\054\001\055\001\
\056\001\057\001\058\001\059\001\060\001\061\001\062\001\063\001\
\064\001\065\001\066\001\255\255\068\001\069\001\070\001\071\001\
\072\001\073\001\074\001\075\001\076\001\255\255\255\255\255\255\
\255\255\255\255\082\001\083\001\084\001\085\001\086\001\087\001\
\007\001\008\001\009\001\255\255\011\001\012\001\013\001\014\001\
\015\001\016\001\017\001\018\001\019\001\020\001\021\001\022\001\
\023\001\024\001\025\001\026\001\027\001\028\001\029\001\030\001\
\031\001\032\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\040\001\041\001\042\001\043\001\044\001\045\001\046\001\
\047\001\048\001\049\001\050\001\051\001\052\001\053\001\054\001\
\055\001\056\001\057\001\058\001\059\001\060\001\061\001\062\001\
\063\001\064\001\065\001\066\001\255\255\068\001\069\001\070\001\
\071\001\072\001\073\001\074\001\075\001\076\001\255\255\255\255\
\255\255\255\255\255\255\082\001\083\001\084\001\085\001\086\001\
\087\001\007\001\008\001\009\001\255\255\011\001\012\001\013\001\
\014\001\015\001\016\001\017\001\018\001\019\001\020\001\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\040\001\041\001\042\001\043\001\044\001\045\001\
\046\001\047\001\048\001\049\001\050\001\051\001\052\001\053\001\
\054\001\055\001\056\001\057\001\255\255\255\255\255\255\255\255\
\062\001\063\001\064\001\065\001\066\001\255\255\068\001\069\001\
\070\001\071\001\072\001\073\001\074\001\075\001\076\001\255\255\
\255\255\255\255\255\255\255\255\082\001\083\001\084\001\085\001\
\086\001\087\001\007\001\008\001\009\001\255\255\011\001\012\001\
\013\001\014\001\015\001\016\001\017\001\018\001\019\001\020\001\
\021\001\022\001\023\001\024\001\025\001\026\001\027\001\028\001\
\029\001\030\001\031\001\032\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\040\001\041\001\042\001\043\001\044\001\
\045\001\046\001\047\001\048\001\049\001\050\001\051\001\052\001\
\053\001\054\001\055\001\056\001\057\001\255\255\255\255\255\255\
\255\255\062\001\063\001\064\001\065\001\066\001\255\255\068\001\
\069\001\070\001\071\001\072\001\073\001\074\001\075\001\076\001\
\255\255\255\255\255\255\255\255\255\255\082\001\083\001\084\001\
\085\001\086\001\087\001\007\001\008\001\009\001\255\255\011\001\
\012\001\013\001\014\001\015\001\016\001\017\001\018\001\019\001\
\020\001\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\032\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\040\001\041\001\042\001\043\001\
\044\001\045\001\046\001\047\001\048\001\049\001\050\001\051\001\
\052\001\053\001\054\001\055\001\255\255\255\255\255\255\255\255\
\255\255\255\255\062\001\063\001\064\001\065\001\066\001\255\255\
\068\001\069\001\070\001\071\001\072\001\073\001\074\001\075\001\
\076\001\255\255\255\255\255\255\255\255\255\255\082\001\083\001\
\084\001\085\001\086\001\087\001\007\001\008\001\009\001\255\255\
\011\001\012\001\013\001\014\001\015\001\016\001\017\001\018\001\
\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\
\027\001\028\001\029\001\030\001\031\001\032\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\040\001\041\001\042\001\
\255\255\044\001\045\001\046\001\047\001\048\001\049\001\050\001\
\051\001\052\001\053\001\054\001\055\001\255\255\255\255\255\255\
\255\255\255\255\255\255\062\001\063\001\064\001\065\001\066\001\
\255\255\068\001\069\001\070\001\071\001\072\001\073\001\074\001\
\075\001\076\001\255\255\255\255\255\255\255\255\255\255\082\001\
\083\001\084\001\085\001\086\001\087\001\007\001\008\001\009\001\
\255\255\011\001\012\001\013\001\014\001\015\001\016\001\017\001\
\018\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\031\001\032\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\041\001\
\042\001\255\255\044\001\045\001\046\001\047\001\048\001\049\001\
\050\001\051\001\052\001\053\001\054\001\055\001\255\255\255\255\
\255\255\255\255\255\255\255\255\062\001\063\001\064\001\065\001\
\066\001\255\255\068\001\069\001\070\001\071\001\072\001\073\001\
\074\001\075\001\076\001\255\255\255\255\255\255\255\255\255\255\
\082\001\083\001\084\001\085\001\086\001\087\001\007\001\008\001\
\009\001\255\255\011\001\012\001\013\001\014\001\015\001\016\001\
\017\001\018\001\019\001\020\001\021\001\022\001\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\031\001\032\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\042\001\255\255\044\001\045\001\046\001\047\001\048\001\
\049\001\050\001\051\001\052\001\053\001\054\001\055\001\255\255\
\255\255\255\255\255\255\255\255\255\255\062\001\063\001\064\001\
\065\001\066\001\255\255\068\001\069\001\070\001\071\001\072\001\
\073\001\074\001\075\001\076\001\255\255\255\255\255\255\255\255\
\255\255\082\001\083\001\084\001\085\001\086\001\087\001\007\001\
\008\001\009\001\255\255\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\255\255\033\001\034\001\035\001\036\001\037\001\038\001\
\039\001\255\255\042\001\255\255\044\001\045\001\046\001\047\001\
\048\001\049\001\050\001\051\001\052\001\053\001\054\001\055\001\
\255\255\056\001\057\001\058\001\059\001\060\001\061\001\063\001\
\064\001\065\001\066\001\255\255\068\001\069\001\070\001\071\001\
\072\001\073\001\074\001\075\001\076\001\255\255\255\255\255\255\
\255\255\255\255\082\001\083\001\084\001\085\001\086\001\087\001\
\007\001\008\001\009\001\255\255\011\001\012\001\013\001\014\001\
\015\001\016\001\017\001\018\001\019\001\020\001\021\001\022\001\
\023\001\024\001\025\001\026\001\027\001\028\001\029\001\030\001\
\031\001\032\001\255\255\033\001\034\001\035\001\036\001\037\001\
\038\001\039\001\040\001\042\001\255\255\043\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\056\001\057\001\058\001\059\001\060\001\061\001\
\255\255\064\001\065\001\066\001\255\255\068\001\069\001\070\001\
\071\001\072\001\073\001\074\001\075\001\076\001\255\255\255\255\
\255\255\255\255\255\255\082\001\083\001\084\001\085\001\086\001\
\087\001\007\001\008\001\009\001\255\255\011\001\012\001\013\001\
\014\001\015\001\016\001\017\001\018\001\019\001\020\001\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\255\255\033\001\034\001\035\001\036\001\
\037\001\038\001\039\001\255\255\042\001\255\255\043\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\056\001\057\001\058\001\059\001\060\001\
\061\001\255\255\064\001\065\001\066\001\255\255\068\001\069\001\
\070\001\071\001\072\001\073\001\074\001\075\001\076\001\255\255\
\255\255\255\255\255\255\255\255\082\001\083\001\084\001\085\001\
\086\001\087\001\007\001\008\001\009\001\255\255\011\001\012\001\
\013\001\014\001\015\001\016\001\017\001\018\001\019\001\020\001\
\021\001\022\001\023\001\024\001\025\001\026\001\027\001\028\001\
\029\001\030\001\031\001\032\001\255\255\033\001\034\001\035\001\
\036\001\037\001\038\001\039\001\255\255\042\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\058\001\059\001\
\060\001\061\001\255\255\064\001\065\001\066\001\255\255\068\001\
\069\001\070\001\071\001\072\001\073\001\074\001\075\001\076\001\
\255\255\255\255\255\255\255\255\255\255\082\001\083\001\084\001\
\085\001\086\001\087\001\007\001\008\001\009\001\255\255\011\001\
\012\001\013\001\014\001\015\001\016\001\017\001\018\001\019\001\
\020\001\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\032\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\042\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\064\001\065\001\066\001\255\255\
\068\001\069\001\070\001\071\001\072\001\073\001\074\001\075\001\
\076\001\255\255\255\255\255\255\255\255\255\255\082\001\083\001\
\084\001\085\001\086\001\087\001\007\001\008\001\009\001\255\255\
\011\001\012\001\013\001\014\001\015\001\016\001\017\001\018\001\
\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\
\027\001\028\001\029\001\030\001\031\001\032\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\042\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\064\001\065\001\066\001\
\255\255\068\001\069\001\070\001\071\001\072\001\073\001\074\001\
\075\001\076\001\255\255\255\255\255\255\255\255\255\255\082\001\
\083\001\084\001\085\001\086\001\087\001\007\001\008\001\009\001\
\255\255\011\001\012\001\013\001\014\001\015\001\016\001\017\001\
\018\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\031\001\032\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\042\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\064\001\065\001\
\066\001\255\255\068\001\069\001\070\001\071\001\072\001\073\001\
\074\001\075\001\076\001\255\255\255\255\255\255\255\255\255\255\
\082\001\083\001\084\001\085\001\086\001\087\001\007\001\008\001\
\009\001\255\255\011\001\012\001\013\001\014\001\015\001\016\001\
\017\001\018\001\019\001\020\001\021\001\022\001\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\031\001\032\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\042\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\064\001\
\065\001\066\001\255\255\068\001\069\001\070\001\071\001\072\001\
\073\001\074\001\075\001\076\001\255\255\255\255\255\255\255\255\
\255\255\082\001\083\001\084\001\085\001\086\001\087\001\007\001\
\008\001\009\001\255\255\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\042\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\064\001\065\001\066\001\255\255\068\001\069\001\070\001\071\001\
\072\001\073\001\074\001\075\001\076\001\255\255\255\255\255\255\
\255\255\255\255\082\001\083\001\084\001\085\001\086\001\087\001\
\007\001\008\001\009\001\255\255\011\001\012\001\013\001\014\001\
\015\001\016\001\017\001\018\001\019\001\020\001\021\001\022\001\
\023\001\024\001\025\001\026\001\027\001\028\001\029\001\030\001\
\031\001\032\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\042\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\064\001\065\001\066\001\255\255\068\001\069\001\070\001\
\071\001\072\001\073\001\074\001\075\001\076\001\255\255\255\255\
\255\255\255\255\255\255\082\001\083\001\084\001\085\001\086\001\
\087\001\007\001\008\001\009\001\255\255\011\001\012\001\013\001\
\014\001\015\001\016\001\017\001\018\001\019\001\020\001\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\042\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\064\001\065\001\066\001\255\255\068\001\069\001\
\070\001\071\001\072\001\073\001\074\001\075\001\076\001\255\255\
\255\255\255\255\255\255\255\255\082\001\083\001\084\001\085\001\
\086\001\087\001\007\001\008\001\009\001\255\255\011\001\012\001\
\013\001\014\001\015\001\016\001\017\001\018\001\019\001\020\001\
\021\001\022\001\023\001\024\001\025\001\026\001\027\001\028\001\
\029\001\030\001\031\001\032\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\042\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\064\001\065\001\066\001\255\255\068\001\
\069\001\070\001\071\001\072\001\073\001\074\001\075\001\076\001\
\255\255\255\255\255\255\255\255\255\255\082\001\083\001\084\001\
\085\001\086\001\087\001\007\001\008\001\009\001\255\255\011\001\
\012\001\013\001\014\001\015\001\016\001\017\001\018\001\019\001\
\020\001\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\032\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\042\001\015\001\
\255\255\255\255\255\255\255\255\255\255\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\255\255\255\255\255\255\064\001\065\001\066\001\255\255\
\068\001\069\001\070\001\071\001\072\001\073\001\074\001\075\001\
\076\001\255\255\255\255\255\255\255\255\255\255\082\001\083\001\
\084\001\085\001\086\001\087\001\007\001\008\001\009\001\255\255\
\011\001\012\001\013\001\014\001\015\001\016\001\255\255\255\255\
\072\001\255\255\021\001\022\001\023\001\024\001\025\001\026\001\
\027\001\028\001\029\001\030\001\031\001\032\001\255\255\087\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\042\001\
\015\001\255\255\255\255\255\255\255\255\255\255\021\001\022\001\
\023\001\024\001\025\001\026\001\027\001\028\001\029\001\030\001\
\031\001\032\001\255\255\255\255\255\255\064\001\065\001\066\001\
\255\255\068\001\255\255\255\255\071\001\072\001\255\255\074\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\082\001\
\083\001\084\001\085\001\086\001\087\001\007\001\008\001\009\001\
\255\255\011\001\012\001\013\001\014\001\015\001\016\001\255\255\
\255\255\072\001\255\255\021\001\022\001\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\031\001\032\001\255\255\
\087\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\042\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\033\001\034\001\035\001\036\001\037\001\038\001\039\001\040\001\
\041\001\255\255\043\001\255\255\255\255\255\255\064\001\065\001\
\066\001\255\255\068\001\069\001\255\255\071\001\072\001\056\001\
\057\001\058\001\059\001\060\001\061\001\062\001\255\255\255\255\
\082\001\083\001\084\001\085\001\086\001\087\001\007\001\008\001\
\009\001\255\255\011\001\012\001\013\001\014\001\015\001\016\001\
\255\255\255\255\255\255\255\255\021\001\022\001\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\031\001\032\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\042\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\033\001\034\001\035\001\036\001\037\001\
\038\001\039\001\040\001\041\001\255\255\043\001\255\255\064\001\
\065\001\066\001\255\255\068\001\255\255\255\255\071\001\072\001\
\255\255\074\001\056\001\057\001\058\001\059\001\060\001\061\001\
\255\255\082\001\083\001\084\001\085\001\086\001\087\001\007\001\
\008\001\009\001\255\255\011\001\012\001\013\001\014\001\015\001\
\016\001\255\255\255\255\255\255\255\255\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\042\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\064\001\065\001\066\001\255\255\068\001\255\255\255\255\071\001\
\072\001\255\255\074\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\082\001\083\001\084\001\085\001\086\001\087\001\
\007\001\008\001\009\001\255\255\011\001\012\001\013\001\014\001\
\015\001\016\001\255\255\255\255\255\255\255\255\021\001\022\001\
\023\001\024\001\025\001\026\001\027\001\028\001\029\001\030\001\
\031\001\032\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\042\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\064\001\065\001\066\001\255\255\068\001\255\255\255\255\
\071\001\072\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\082\001\083\001\084\001\085\001\086\001\
\087\001\007\001\008\001\009\001\255\255\011\001\012\001\013\001\
\014\001\015\001\016\001\255\255\255\255\255\255\255\255\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\042\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\064\001\065\001\066\001\255\255\068\001\255\255\
\255\255\071\001\072\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\082\001\083\001\084\001\085\001\
\086\001\087\001\007\001\008\001\009\001\255\255\011\001\012\001\
\013\001\014\001\015\001\016\001\255\255\255\255\255\255\255\255\
\021\001\022\001\023\001\024\001\025\001\026\001\027\001\028\001\
\029\001\030\001\031\001\032\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\042\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\064\001\065\001\066\001\255\255\068\001\
\255\255\255\255\071\001\072\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\082\001\083\001\084\001\
\085\001\086\001\087\001\007\001\008\001\009\001\255\255\011\001\
\012\001\013\001\014\001\015\001\016\001\255\255\255\255\255\255\
\255\255\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\032\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\042\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\064\001\065\001\066\001\255\255\
\068\001\255\255\255\255\071\001\072\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\082\001\083\001\
\084\001\085\001\086\001\087\001\007\001\008\001\009\001\255\255\
\011\001\012\001\013\001\014\001\015\001\016\001\255\255\255\255\
\255\255\255\255\021\001\022\001\023\001\024\001\025\001\026\001\
\027\001\028\001\029\001\030\001\031\001\032\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\042\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\064\001\065\001\066\001\
\255\255\068\001\255\255\255\255\071\001\072\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\082\001\
\083\001\084\001\085\001\086\001\087\001\007\001\008\001\009\001\
\255\255\011\001\012\001\013\001\014\001\015\001\016\001\255\255\
\255\255\255\255\255\255\021\001\022\001\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\031\001\032\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\042\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\064\001\065\001\
\066\001\255\255\068\001\255\255\255\255\071\001\072\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\082\001\083\001\084\001\085\001\086\001\087\001\007\001\008\001\
\009\001\255\255\011\001\012\001\013\001\014\001\015\001\016\001\
\255\255\255\255\255\255\255\255\021\001\022\001\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\031\001\032\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\042\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\064\001\
\065\001\066\001\255\255\068\001\255\255\255\255\071\001\072\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\082\001\083\001\084\001\085\001\086\001\087\001\007\001\
\008\001\009\001\255\255\011\001\012\001\013\001\014\001\015\001\
\016\001\255\255\255\255\255\255\255\255\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\008\001\255\255\255\255\011\001\255\255\255\255\255\255\
\015\001\016\001\042\001\255\255\255\255\255\255\021\001\022\001\
\023\001\024\001\025\001\026\001\027\001\028\001\029\001\030\001\
\031\001\032\001\255\255\255\255\255\255\255\255\255\255\255\255\
\064\001\065\001\066\001\042\001\068\001\255\255\255\255\071\001\
\072\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\082\001\083\001\084\001\085\001\086\001\087\001\
\255\255\064\001\065\001\066\001\255\255\068\001\255\255\255\255\
\255\255\072\001\073\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\082\001\083\001\084\001\085\001\086\001\
\087\001\008\001\255\255\255\255\011\001\255\255\255\255\255\255\
\015\001\016\001\255\255\255\255\255\255\255\255\021\001\022\001\
\023\001\024\001\025\001\026\001\027\001\028\001\029\001\030\001\
\031\001\032\001\008\001\255\255\255\255\011\001\255\255\255\255\
\255\255\015\001\016\001\042\001\255\255\255\255\255\255\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\255\255\255\255\255\255\255\255\255\255\
\255\255\064\001\065\001\066\001\042\001\068\001\255\255\255\255\
\255\255\072\001\073\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\082\001\083\001\084\001\085\001\086\001\
\087\001\255\255\064\001\065\001\066\001\255\255\068\001\255\255\
\255\255\255\255\072\001\073\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\082\001\083\001\084\001\085\001\
\086\001\087\001\008\001\255\255\255\255\011\001\255\255\255\255\
\255\255\015\001\016\001\255\255\255\255\255\255\255\255\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\042\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\064\001\065\001\066\001\255\255\068\001\255\255\
\255\255\255\255\072\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\082\001\083\001\084\001\085\001\
\086\001\087\001\033\001\034\001\035\001\036\001\037\001\038\001\
\039\001\040\001\041\001\255\255\043\001\044\001\045\001\046\001\
\047\001\048\001\049\001\050\001\051\001\052\001\053\001\054\001\
\055\001\056\001\057\001\058\001\059\001\060\001\061\001\062\001\
\063\001\255\255\255\255\255\255\033\001\034\001\035\001\036\001\
\037\001\038\001\039\001\040\001\041\001\076\001\043\001\044\001\
\045\001\046\001\047\001\048\001\049\001\050\001\051\001\052\001\
\053\001\054\001\055\001\056\001\057\001\058\001\059\001\060\001\
\061\001\062\001\063\001\255\255\255\255\255\255\033\001\034\001\
\035\001\036\001\037\001\038\001\039\001\040\001\041\001\076\001\
\043\001\044\001\045\001\046\001\047\001\048\001\049\001\050\001\
\051\001\052\001\053\001\054\001\055\001\056\001\057\001\058\001\
\059\001\060\001\061\001\062\001\063\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\073\001\255\255\
\075\001\033\001\034\001\035\001\036\001\037\001\038\001\039\001\
\040\001\041\001\255\255\043\001\044\001\045\001\046\001\047\001\
\048\001\049\001\050\001\051\001\052\001\053\001\054\001\055\001\
\056\001\057\001\058\001\059\001\060\001\061\001\062\001\063\001\
\255\255\255\255\033\001\034\001\035\001\036\001\037\001\038\001\
\039\001\040\001\041\001\075\001\043\001\044\001\045\001\046\001\
\047\001\048\001\049\001\050\001\051\001\052\001\053\001\054\001\
\055\001\056\001\057\001\058\001\059\001\060\001\061\001\062\001\
\063\001\033\001\034\001\035\001\036\001\037\001\038\001\039\001\
\040\001\041\001\073\001\043\001\044\001\045\001\046\001\047\001\
\048\001\049\001\050\001\051\001\052\001\053\001\054\001\055\001\
\056\001\057\001\058\001\059\001\060\001\061\001\062\001\063\001\
\033\001\034\001\035\001\036\001\037\001\038\001\039\001\040\001\
\041\001\073\001\043\001\044\001\045\001\046\001\047\001\048\001\
\049\001\050\001\051\001\052\001\053\001\054\001\055\001\056\001\
\057\001\058\001\059\001\060\001\061\001\062\001\063\001\033\001\
\034\001\035\001\036\001\037\001\038\001\039\001\040\001\041\001\
\073\001\043\001\044\001\045\001\046\001\047\001\048\001\049\001\
\050\001\051\001\052\001\053\001\054\001\055\001\056\001\057\001\
\058\001\059\001\060\001\061\001\062\001\063\001\255\255\255\255\
\255\255\255\255\255\255\255\255\070\001\033\001\034\001\035\001\
\036\001\037\001\038\001\039\001\040\001\041\001\255\255\043\001\
\044\001\045\001\046\001\047\001\048\001\049\001\050\001\051\001\
\052\001\053\001\054\001\055\001\056\001\057\001\058\001\059\001\
\060\001\061\001\062\001\063\001\255\255\255\255\255\255\255\255\
\255\255\255\255\070\001\033\001\034\001\035\001\036\001\037\001\
\038\001\039\001\040\001\041\001\255\255\043\001\044\001\045\001\
\046\001\047\001\048\001\049\001\050\001\051\001\052\001\053\001\
\054\001\055\001\056\001\057\001\058\001\059\001\060\001\061\001\
\062\001\063\001\255\255\255\255\255\255\255\255\255\255\255\255\
\070\001\033\001\034\001\035\001\036\001\037\001\038\001\039\001\
\040\001\041\001\255\255\043\001\044\001\045\001\046\001\047\001\
\048\001\049\001\050\001\051\001\052\001\053\001\054\001\055\001\
\056\001\057\001\058\001\059\001\060\001\061\001\062\001\063\001\
\255\255\255\255\255\255\255\255\255\255\069\001\033\001\034\001\
\035\001\036\001\037\001\038\001\039\001\040\001\041\001\255\255\
\043\001\044\001\045\001\046\001\047\001\048\001\049\001\050\001\
\051\001\052\001\053\001\054\001\055\001\056\001\057\001\058\001\
\059\001\060\001\061\001\062\001\063\001\255\255\255\255\255\255\
\255\255\255\255\069\001\033\001\034\001\035\001\036\001\037\001\
\038\001\039\001\040\001\041\001\255\255\043\001\044\001\045\001\
\046\001\047\001\048\001\049\001\050\001\051\001\052\001\053\001\
\054\001\055\001\056\001\057\001\058\001\059\001\060\001\061\001\
\062\001\063\001"

let yynames_const = "\
  DOUBLECOLON\000\
  FUNC\000\
  PACKAGE\000\
  IMPORT\000\
  TYPE\000\
  STRUCT\000\
  RETURN\000\
  BREAK\000\
  IF\000\
  ELSE\000\
  CONTINUE\000\
  FOR\000\
  WHILE\000\
  CONST\000\
  ERROR\000\
  NULL\000\
  FINAL\000\
  MUT\000\
  LATE\000\
  PRIVATE\000\
  BOOL\000\
  STRING\000\
  U8\000\
  U16\000\
  U32\000\
  U64\000\
  I8\000\
  I16\000\
  I32\000\
  I64\000\
  F32\000\
  F64\000\
  PLUS\000\
  MINUS\000\
  DIV\000\
  MULT\000\
  MOD\000\
  LSHIFT\000\
  RSHIFT\000\
  BITXOR\000\
  BITOR\000\
  BITNOT\000\
  BITAND\000\
  ASSIGN\000\
  PLUS_ASSIGN\000\
  MINUS_ASSIGN\000\
  TIMES_ASSIGN\000\
  DIV_ASSIGN\000\
  MOD_ASSIGN\000\
  DECL_ASSIGN\000\
  LSHIFT_ASSIGN\000\
  RSHIFT_ASSIGN\000\
  BITAND_ASSIGN\000\
  BITXOR_ASSIGN\000\
  BITOR_ASSIGN\000\
  EQ\000\
  NEQ\000\
  LT\000\
  LE\000\
  GT\000\
  GE\000\
  AND\000\
  OR\000\
  NOT\000\
  INC\000\
  DEC\000\
  NEG\000\
  LPAREN\000\
  RPAREN\000\
  LBRACE\000\
  RBRACE\000\
  LBRACKET\000\
  RBRACKET\000\
  SEMICOLON\000\
  COLON\000\
  COMMA\000\
  DOT\000\
  TRIPLEDOT\000\
  QUESTION\000\
  "

let yynames_block = "\
  INT_LIT\000\
  BOOL_LIT\000\
  CHAR_LIT\000\
  FLOAT_LIT\000\
  STRING_LIT\000\
  IDENT\000\
  "

let yyact = [|
  (fun _ -> failwith "parser")
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 5 : 'package_decl) in
    let _2 = (Parsing.peek_val __caml_parser_env 4 : 'import_decls) in
    let _3 = (Parsing.peek_val __caml_parser_env 3 : 'type_decls) in
    let _4 = (Parsing.peek_val __caml_parser_env 2 : 'var_decls) in
    let _5 = (Parsing.peek_val __caml_parser_env 1 : 'func_decls) in
    let _6 = (Parsing.peek_val __caml_parser_env 0 : 'struct_func_decls) in
    Obj.repr(
# 56 "parser.mly"
  ( { package_name =      _1;
      imports =           _2;
      type_declarations = _3;
      global_vars =       _4;
      functions =         _5;
      struct_functions =  _6; }
  )
# 1509 "parser.ml"
               : Ast.program))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 67 "parser.mly"
                  ( _2 )
# 1516 "parser.ml"
               : 'package_decl))
; (fun __caml_parser_env ->
    Obj.repr(
# 72 "parser.mly"
                             ( []       )
# 1522 "parser.ml"
               : 'import_decls))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'import_decls) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'import_decl) in
    Obj.repr(
# 73 "parser.mly"
                             ( _1 :: _2 )
# 1530 "parser.ml"
               : 'import_decls))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 76 "parser.mly"
                      ( _2 )
# 1537 "parser.ml"
               : 'import_decl))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'type_decls) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'type_decl) in
    Obj.repr(
# 82 "parser.mly"
                         ( [_1] @ _2 )
# 1545 "parser.ml"
               : 'type_decls))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 4 : string) in
    let _5 = (Parsing.peek_val __caml_parser_env 1 : 'field_list) in
    Obj.repr(
# 87 "parser.mly"
                                               ( TypeStruct (_2, _5) )
# 1553 "parser.ml"
               : 'type_decl))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'type_expr) in
    Obj.repr(
# 88 "parser.mly"
                                               ( TypeAlias (_2, _4)  )
# 1561 "parser.ml"
               : 'type_decl))
; (fun __caml_parser_env ->
    Obj.repr(
# 91 "parser.mly"
                          ( []         )
# 1567 "parser.ml"
               : 'field_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'field_list) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'field_decl) in
    Obj.repr(
# 92 "parser.mly"
                          ( _1 :: [_2] )
# 1575 "parser.ml"
               : 'field_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : 'modifier) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'type_expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'opt_default) in
    Obj.repr(
# 96 "parser.mly"
    ( { name =          _2;
        field_type =    _3;
        modifier =      _1;
        default_value = _4; }
    )
# 1589 "parser.ml"
               : 'field_decl))
; (fun __caml_parser_env ->
    Obj.repr(
# 103 "parser.mly"
            ( Private )
# 1595 "parser.ml"
               : 'modifier))
; (fun __caml_parser_env ->
    Obj.repr(
# 104 "parser.mly"
            ( Mutable )
# 1601 "parser.ml"
               : 'modifier))
; (fun __caml_parser_env ->
    Obj.repr(
# 105 "parser.mly"
            ( Final   )
# 1607 "parser.ml"
               : 'modifier))
; (fun __caml_parser_env ->
    Obj.repr(
# 106 "parser.mly"
            ( Late    )
# 1613 "parser.ml"
               : 'modifier))
; (fun __caml_parser_env ->
    Obj.repr(
# 109 "parser.mly"
                  ( []      )
# 1619 "parser.ml"
               : 'opt_default))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 110 "parser.mly"
                  ( Some _2 )
# 1626 "parser.ml"
               : 'opt_default))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'var_decls) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'var_decl) in
    Obj.repr(
# 117 "parser.mly"
                       ( [_1] @ _2 )
# 1634 "parser.ml"
               : 'var_decls))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : 'type_expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 121 "parser.mly"
  ( StrictType { 
    is_const =         true;
    name =             _3;
    var_type =         _2;
    initializer_expr = _5; })
# 1647 "parser.ml"
               : 'var_decl))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : 'type_expr) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 128 "parser.mly"
  ( StrictType { 
    is_const =         false;
    name =             _2;
    var_type =         _1;
    initializer_expr = _4; })
# 1660 "parser.ml"
               : 'var_decl))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 135 "parser.mly"
  ( InferType { 
    is_const =         true;
    name =             _2;
    var_type =         None; 
    initializer_expr = _4; })
# 1672 "parser.ml"
               : 'var_decl))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 142 "parser.mly"
  ( InferType { 
    is_const =         false;
    name =             _1;
    var_type =         None;
    initializer_expr = _3; })
# 1684 "parser.ml"
               : 'var_decl))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'func_decls) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'func_decl) in
    Obj.repr(
# 152 "parser.mly"
                         ( [_1] @ _2 )
# 1692 "parser.ml"
               : 'func_decls))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 7 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 5 : 'params) in
    let _6 = (Parsing.peek_val __caml_parser_env 3 : 'return_types) in
    let _8 = (Parsing.peek_val __caml_parser_env 1 : 'stmts) in
    Obj.repr(
# 156 "parser.mly"
  ( { name =         _2;
      params =       _4;
      return_types = _6;
      body =         _8; })
# 1705 "parser.ml"
               : 'func_decl))
; (fun __caml_parser_env ->
    Obj.repr(
# 162 "parser.mly"
                  ( [] )
# 1711 "parser.ml"
               : 'params))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'params_list) in
    Obj.repr(
# 163 "parser.mly"
                  ( _1 )
# 1718 "parser.ml"
               : 'params))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'params_list) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'param) in
    Obj.repr(
# 166 "parser.mly"
                            ( _1 :: _3 )
# 1726 "parser.ml"
               : 'params_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'param) in
    Obj.repr(
# 167 "parser.mly"
                            ( [_1]     )
# 1733 "parser.ml"
               : 'params_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'type_expr) in
    Obj.repr(
# 170 "parser.mly"
                    ( { 
    name =        _1;
    param_type =  _2;
    is_variadic = false; })
# 1744 "parser.ml"
               : 'param))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'type_expr) in
    Obj.repr(
# 175 "parser.mly"
                              ( {
    name =        _1;
    param_type =  _3;
    is_variadic = true; })
# 1755 "parser.ml"
               : 'param))
; (fun __caml_parser_env ->
    Obj.repr(
# 181 "parser.mly"
                    ( [] )
# 1761 "parser.ml"
               : 'return_types))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'type_expr_list) in
    Obj.repr(
# 182 "parser.mly"
                    ( _1 )
# 1768 "parser.ml"
               : 'return_types))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'type_expr) in
    Obj.repr(
# 185 "parser.mly"
                                   ( [_1]     )
# 1775 "parser.ml"
               : 'type_expr_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'type_expr_list) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'type_expr) in
    Obj.repr(
# 186 "parser.mly"
                                   ( _1 :: _3 )
# 1783 "parser.ml"
               : 'type_expr_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'struct_func_decls) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'struct_func_decl) in
    Obj.repr(
# 192 "parser.mly"
                                       ( [_1] @ _2 )
# 1791 "parser.ml"
               : 'struct_func_decls))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 10 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 9 : 'type_expr) in
    let _6 = (Parsing.peek_val __caml_parser_env 7 : string) in
    let _8 = (Parsing.peek_val __caml_parser_env 5 : 'params) in
    let _10 = (Parsing.peek_val __caml_parser_env 3 : 'return_types) in
    let _12 = (Parsing.peek_val __caml_parser_env 1 : 'stmts) in
    Obj.repr(
# 196 "parser.mly"
  ({
  name:         _6;
  struct_name:  _3;
  params:       _8;
  return_types: _10;
  body:         _12 })
# 1808 "parser.ml"
               : 'struct_func_decl))
; (fun __caml_parser_env ->
    Obj.repr(
# 206 "parser.mly"
                  ( []       )
# 1814 "parser.ml"
               : 'stmts))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'stmts) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'stmt) in
    Obj.repr(
# 207 "parser.mly"
                  ( _1 :: _2 )
# 1822 "parser.ml"
               : 'stmts))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 210 "parser.mly"
                                                                           ( Expr (_1)                )
# 1829 "parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'var_decl) in
    Obj.repr(
# 211 "parser.mly"
                                                                           ( VarDecl (_1)             )
# 1836 "parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 4 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 2 : 'stmts) in
    let _6 = (Parsing.peek_val __caml_parser_env 0 : 'else_block) in
    Obj.repr(
# 212 "parser.mly"
                                                                           ( IfStmt (_2, _4, _6)      )
# 1845 "parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 7 : 'opt_stmt) in
    let _4 = (Parsing.peek_val __caml_parser_env 5 : 'opt_expr) in
    let _6 = (Parsing.peek_val __caml_parser_env 3 : 'opt_expr) in
    let _8 = (Parsing.peek_val __caml_parser_env 1 : 'stmts) in
    Obj.repr(
# 213 "parser.mly"
                                                                           ( ForStmt (_2, _4, _6, _8) )
# 1855 "parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'stmts) in
    Obj.repr(
# 214 "parser.mly"
                                                                           ( WhileStmt (_2, _4)       )
# 1863 "parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr_list) in
    Obj.repr(
# 215 "parser.mly"
                                                                           ( Return (_2)              )
# 1870 "parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'stmts) in
    Obj.repr(
# 218 "parser.mly"
                                                ( _3                    )
# 1877 "parser.ml"
               : 'else_block))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 4 : 'expr) in
    let _5 = (Parsing.peek_val __caml_parser_env 2 : 'stmts) in
    let _7 = (Parsing.peek_val __caml_parser_env 0 : 'else_block) in
    Obj.repr(
# 219 "parser.mly"
                                                ( [IfStmt (_3, _5, _7)] )
# 1886 "parser.ml"
               : 'else_block))
; (fun __caml_parser_env ->
    Obj.repr(
# 222 "parser.mly"
                             ( None                )
# 1892 "parser.ml"
               : 'opt_stmt))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'var_decl) in
    Obj.repr(
# 223 "parser.mly"
                             ( Some (VarDecl (_1)) )
# 1899 "parser.ml"
               : 'opt_stmt))
; (fun __caml_parser_env ->
    Obj.repr(
# 226 "parser.mly"
                             ( None    )
# 1905 "parser.ml"
               : 'opt_expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 227 "parser.mly"
                             ( Some _1 )
# 1912 "parser.ml"
               : 'opt_expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 230 "parser.mly"
                             ( _1         )
# 1919 "parser.ml"
               : 'expr_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr_list) in
    Obj.repr(
# 231 "parser.mly"
                             ( _1 :: [_3] )
# 1927 "parser.ml"
               : 'expr_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 234 "parser.mly"
                                      ( Binop(_1, Plus, _3)   )
# 1935 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 235 "parser.mly"
                                      ( Binop(_1, Minus, _3)  )
# 1943 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 236 "parser.mly"
                                      ( Binop(_1, Mult, _3)   )
# 1951 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 237 "parser.mly"
                                      ( Binop(_1, Div, _3)    )
# 1959 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 238 "parser.mly"
                                      ( Binop(_1, Mod, _3)    )
# 1967 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 239 "parser.mly"
                                      ( Binop(_1, Lshift, _3) )
# 1975 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 240 "parser.mly"
                                      ( Binop(_1, Rshift, _3) )
# 1983 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 241 "parser.mly"
                                      ( Binop(_1, Bitxor, _3) )
# 1991 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 242 "parser.mly"
                                      ( Binop(_1, Bitor, _3)  )
# 1999 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 243 "parser.mly"
                                      ( Binop(_1, Bitand, _3) )
# 2007 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 244 "parser.mly"
                                      ( Binop(_1, Eq, _3)     )
# 2015 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 245 "parser.mly"
                                      ( Binop(_1, Neq, _3)    )
# 2023 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 246 "parser.mly"
                                      ( Binop(_1, Lt, _3)     )
# 2031 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 247 "parser.mly"
                                      ( Binop(_1, Le, _3)     )
# 2039 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 248 "parser.mly"
                                      ( Binop(_1, Gt, _3)     )
# 2047 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 249 "parser.mly"
                                      ( Binop(_1, Ge, _3)     )
# 2055 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 250 "parser.mly"
                                      ( Binop(_1, And, _3)    )
# 2063 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 251 "parser.mly"
                                      ( Binop(_1, Or, _3)     )
# 2071 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 253 "parser.mly"
                                         ( Assignment (_1, RegAssign, _3)    )
# 2079 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 254 "parser.mly"
                                         ( Assignment (_1, DeclAssign, _3)   )
# 2087 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 255 "parser.mly"
                                         ( Assignment (_1, PlusAssign, _3)   )
# 2095 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 256 "parser.mly"
                                         ( Assignment (_1, MinusAssign, _3)  )
# 2103 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 257 "parser.mly"
                                         ( Assignment (_1, TimesAssign, _3)  )
# 2111 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 258 "parser.mly"
                                         ( Assignment (_1, DivAssign, _3)    )
# 2119 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 259 "parser.mly"
                                         ( Assignment (_1, ModAssign, _3)    )
# 2127 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 260 "parser.mly"
                                         ( Assignment (_1, LshiftAssign, _3) )
# 2135 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 261 "parser.mly"
                                         ( Assignment (_1, RshiftAssign, _3) )
# 2143 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 262 "parser.mly"
                                         ( Assignment (_1, BitandAssign, _3) )
# 2151 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 263 "parser.mly"
                                         ( Assignment (_1, BitxorAssign, _3) )
# 2159 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 264 "parser.mly"
                                         ( Assignment (_1, BitorAssign, _3)  )
# 2167 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 266 "parser.mly"
              ( Unaop (Bitnot, _2) )
# 2174 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 267 "parser.mly"
              ( Unaop (Not, _2)    )
# 2181 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 268 "parser.mly"
              ( Unaop (Inc, _2)    )
# 2188 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 269 "parser.mly"
              ( Unaop (Dec, _2)    )
# 2195 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 271 "parser.mly"
                          ( FieldAccess (_1, Identifier(_3)) )
# 2203 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 272 "parser.mly"
                                          ( IndexAccess (_1, _3)             )
# 2211 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 5 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 3 : 'expr) in
    let _5 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 273 "parser.mly"
                                          ( SliceExpr (_1, _3, Some _5)      )
# 2220 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    Obj.repr(
# 274 "parser.mly"
                                          ( SliceExpr (_1, _3, None)         )
# 2228 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'expr_list) in
    Obj.repr(
# 275 "parser.mly"
                                          ( FunctionCall (_1, _3)            )
# 2236 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 5 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _5 = (Parsing.peek_val __caml_parser_env 1 : 'expr_list) in
    Obj.repr(
# 276 "parser.mly"
                                           ( MethodCall (_1, _3, _5)          )
# 2245 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : 'type_expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 277 "parser.mly"
                                          ( Cast (_1, _3)                    )
# 2253 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 5 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 3 : 'type_expr) in
    let _6 = (Parsing.peek_val __caml_parser_env 1 : 'expr_list) in
    Obj.repr(
# 279 "parser.mly"
                                                           ( ArrayLit (_2, _4, _6) )
# 2262 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'field_expr_list) in
    Obj.repr(
# 280 "parser.mly"
                                                           ( StructLit (_1, _3)    )
# 2270 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 3 : 'type_expr) in
    let _5 = (Parsing.peek_val __caml_parser_env 1 : 'expr_list) in
    Obj.repr(
# 281 "parser.mly"
                                                           ( SliceLit (_3, _5)     )
# 2278 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 283 "parser.mly"
                                         ( SubExpr _2      )
# 2285 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int) in
    Obj.repr(
# 284 "parser.mly"
                                         ( IntLit (_1)     )
# 2292 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : bool) in
    Obj.repr(
# 285 "parser.mly"
                                         ( BoolLit (_1)    )
# 2299 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : char) in
    Obj.repr(
# 286 "parser.mly"
                                         ( CharLit (_1)    )
# 2306 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : float) in
    Obj.repr(
# 287 "parser.mly"
                                         ( FloatLit (_1)   )
# 2313 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 288 "parser.mly"
                                         ( StringLit (_1)  )
# 2320 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    Obj.repr(
# 289 "parser.mly"
                                         ( Null            )
# 2326 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    Obj.repr(
# 290 "parser.mly"
                                         ( Break           )
# 2332 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    Obj.repr(
# 291 "parser.mly"
                                         ( Continue        )
# 2338 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'primitive_type) in
    Obj.repr(
# 294 "parser.mly"
                                     ( Primitive _1   )
# 2345 "parser.ml"
               : 'type_expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'type_expr) in
    Obj.repr(
# 295 "parser.mly"
                                     ( Array (_4, _2) )
# 2353 "parser.ml"
               : 'type_expr))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'type_expr) in
    Obj.repr(
# 296 "parser.mly"
                                     ( Slice _3       )
# 2360 "parser.ml"
               : 'type_expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 297 "parser.mly"
                                     ( TypeName _1 )
# 2367 "parser.ml"
               : 'type_expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 300 "parser.mly"
                                            ( [(_1, _3)]     )
# 2375 "parser.ml"
               : 'field_expr_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'field_expr_list) in
    Obj.repr(
# 301 "parser.mly"
                                            ( (_1, _3) :: _5 )
# 2384 "parser.ml"
               : 'field_expr_list))
; (fun __caml_parser_env ->
    Obj.repr(
# 304 "parser.mly"
                           ( Bool   )
# 2390 "parser.ml"
               : 'primitive_type))
; (fun __caml_parser_env ->
    Obj.repr(
# 305 "parser.mly"
                           ( String )
# 2396 "parser.ml"
               : 'primitive_type))
; (fun __caml_parser_env ->
    Obj.repr(
# 306 "parser.mly"
                           ( U8     )
# 2402 "parser.ml"
               : 'primitive_type))
; (fun __caml_parser_env ->
    Obj.repr(
# 307 "parser.mly"
                           ( U16    )
# 2408 "parser.ml"
               : 'primitive_type))
; (fun __caml_parser_env ->
    Obj.repr(
# 308 "parser.mly"
                           ( U32    )
# 2414 "parser.ml"
               : 'primitive_type))
; (fun __caml_parser_env ->
    Obj.repr(
# 309 "parser.mly"
                           ( U64    )
# 2420 "parser.ml"
               : 'primitive_type))
; (fun __caml_parser_env ->
    Obj.repr(
# 310 "parser.mly"
                           ( I8     )
# 2426 "parser.ml"
               : 'primitive_type))
; (fun __caml_parser_env ->
    Obj.repr(
# 311 "parser.mly"
                           ( I16    )
# 2432 "parser.ml"
               : 'primitive_type))
; (fun __caml_parser_env ->
    Obj.repr(
# 312 "parser.mly"
                           ( I32    )
# 2438 "parser.ml"
               : 'primitive_type))
; (fun __caml_parser_env ->
    Obj.repr(
# 313 "parser.mly"
                           ( I64    )
# 2444 "parser.ml"
               : 'primitive_type))
; (fun __caml_parser_env ->
    Obj.repr(
# 314 "parser.mly"
                           ( F32    )
# 2450 "parser.ml"
               : 'primitive_type))
; (fun __caml_parser_env ->
    Obj.repr(
# 315 "parser.mly"
                           ( F64    )
# 2456 "parser.ml"
               : 'primitive_type))
; (fun __caml_parser_env ->
    Obj.repr(
# 316 "parser.mly"
                           ( Error  )
# 2462 "parser.ml"
               : 'primitive_type))
(* Entry program *)
; (fun __caml_parser_env -> raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0)))
|]
let yytables =
  { Parsing.actions=yyact;
    Parsing.transl_const=yytransl_const;
    Parsing.transl_block=yytransl_block;
    Parsing.lhs=yylhs;
    Parsing.len=yylen;
    Parsing.defred=yydefred;
    Parsing.dgoto=yydgoto;
    Parsing.sindex=yysindex;
    Parsing.rindex=yyrindex;
    Parsing.gindex=yygindex;
    Parsing.tablesize=yytablesize;
    Parsing.table=yytable;
    Parsing.check=yycheck;
    Parsing.error_function=parse_error;
    Parsing.names_const=yynames_const;
    Parsing.names_block=yynames_block }
let program (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (Parsing.yyparse yytables 1 lexfun lexbuf : Ast.program)
;;
